version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sscn_postgres
    environment:
      POSTGRES_DB: sscn_db
      POSTGRES_USER: sscn_user
      POSTGRES_PASSWORD: sscn_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - sscn_network
    restart: unless-stopped

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: sscn_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - sscn_network
    restart: unless-stopped

  # Elasticsearch for search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: sscn_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9201:9200"
    networks:
      - sscn_network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: sscn_backend
    environment:
      - DATABASE_URL=postgresql://sscn_user:sscn_password@postgres:5432/sscn_db
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    env_file:
      - ./backend/.env
    ports:
      - "8100:8000"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - sscn_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sscn_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8100
    env_file:
      - ./frontend/.env.local
    ports:
      - "3100:3000"
    depends_on:
      - backend
    networks:
      - sscn_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sscn_nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - sscn_network
    restart: unless-stopped

networks:
  sscn_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data: